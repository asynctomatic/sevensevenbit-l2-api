CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE SEQUENCE "VaultChainId_ValidiumSequence" START WITH 1 INCREMENT BY 1 NO MINVALUE MAXVALUE 2147483648 NO CYCLE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE assets (
        id uuid NOT NULL,
        starkex_type text NOT NULL,
        type text NOT NULL,
        address text NULL,
        name text NOT NULL,
        symbol text NOT NULL,
        quantum numeric NOT NULL,
        enabled boolean NOT NULL,
        CONSTRAINT "PK_assets" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE fees_config (
        id uuid NOT NULL,
        action text NOT NULL,
        amount integer NOT NULL,
        CONSTRAINT "PK_fees_config" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE "InboxState" (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        "MessageId" uuid NOT NULL,
        "ConsumerId" uuid NOT NULL,
        "LockId" uuid NOT NULL,
        "RowVersion" bytea NULL,
        "Received" timestamp with time zone NOT NULL,
        "ReceiveCount" integer NOT NULL,
        "ExpirationTime" timestamp with time zone NULL,
        "Consumed" timestamp with time zone NULL,
        "Delivered" timestamp with time zone NULL,
        "LastSequenceNumber" bigint NULL,
        CONSTRAINT "PK_InboxState" PRIMARY KEY ("Id"),
        CONSTRAINT "AK_InboxState_MessageId_ConsumerId" UNIQUE ("MessageId", "ConsumerId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE "OutboxMessage" (
        "SequenceNumber" bigint GENERATED BY DEFAULT AS IDENTITY,
        "EnqueueTime" timestamp with time zone NULL,
        "SentTime" timestamp with time zone NOT NULL,
        "Headers" text NULL,
        "Properties" text NULL,
        "InboxMessageId" uuid NULL,
        "InboxConsumerId" uuid NULL,
        "OutboxId" uuid NULL,
        "MessageId" uuid NOT NULL,
        "ContentType" character varying(256) NOT NULL,
        "Body" text NOT NULL,
        "ConversationId" uuid NULL,
        "CorrelationId" uuid NULL,
        "InitiatorId" uuid NULL,
        "RequestId" uuid NULL,
        "SourceAddress" character varying(256) NULL,
        "DestinationAddress" character varying(256) NULL,
        "ResponseAddress" character varying(256) NULL,
        "FaultAddress" character varying(256) NULL,
        "ExpirationTime" timestamp with time zone NULL,
        CONSTRAINT "PK_OutboxMessage" PRIMARY KEY ("SequenceNumber")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE "OutboxState" (
        "OutboxId" uuid NOT NULL,
        "LockId" uuid NOT NULL,
        "RowVersion" bytea NULL,
        "Created" timestamp with time zone NOT NULL,
        "Delivered" timestamp with time zone NULL,
        "LastSequenceNumber" bigint NULL,
        CONSTRAINT "PK_OutboxState" PRIMARY KEY ("OutboxId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE transactions (
        id uuid NOT NULL,
        starkex_tx_id bigint NOT NULL,
        raw_transaction jsonb NOT NULL,
        operation text NOT NULL,
        status text NOT NULL DEFAULT 'Created',
        creation_date timestamp without time zone NOT NULL DEFAULT (now()),
        CONSTRAINT "PK_transactions" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE users (
        id uuid NOT NULL,
        stark_key text NOT NULL,
        creation_date timestamp without time zone NOT NULL DEFAULT (now()),
        CONSTRAINT "PK_users" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE erc1155_minting_blobs (
        id uuid NOT NULL,
        asset_id uuid NOT NULL,
        product_id uuid NULL,
        vault_id uuid NULL,
        minting_blob text NOT NULL,
        quantity numeric NOT NULL,
        CONSTRAINT "PK_erc1155_minting_blobs" PRIMARY KEY (id),
        CONSTRAINT "FK_erc1155_minting_blobs_assets_asset_id" FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE erc20_minting_blobs (
        id uuid NOT NULL,
        asset_id uuid NOT NULL,
        product_id uuid NULL,
        vault_id uuid NULL,
        minting_blob text NOT NULL,
        quantity numeric NOT NULL,
        CONSTRAINT "PK_erc20_minting_blobs" PRIMARY KEY (id),
        CONSTRAINT "FK_erc20_minting_blobs_assets_asset_id" FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE erc721_minting_blobs (
        id uuid NOT NULL,
        asset_id uuid NOT NULL,
        product_id uuid NULL,
        vault_id uuid NULL,
        minting_blob text NOT NULL,
        quantity numeric NOT NULL,
        CONSTRAINT "PK_erc721_minting_blobs" PRIMARY KEY (id),
        CONSTRAINT "FK_erc721_minting_blobs_assets_asset_id" FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE marketplaces (
        id uuid NOT NULL,
        base_asset_id uuid NOT NULL,
        quote_asset_id uuid NOT NULL,
        base_asset_token_id text NULL,
        quote_asset_token_id text NULL,
        CONSTRAINT "PK_marketplaces" PRIMARY KEY (id),
        CONSTRAINT "FK_marketplaces_assets_base_asset_id" FOREIGN KEY (base_asset_id) REFERENCES assets (id) ON DELETE RESTRICT,
        CONSTRAINT "FK_marketplaces_assets_quote_asset_id" FOREIGN KEY (quote_asset_id) REFERENCES assets (id) ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE replacement_transactions (
        id uuid NOT NULL,
        transaction_id uuid NOT NULL,
        error_code text NOT NULL,
        error_msg text NOT NULL,
        reverted_date timestamp without time zone NOT NULL DEFAULT (now()),
        replacement_counter integer NOT NULL,
        raw_replacement_transactions jsonb NOT NULL,
        CONSTRAINT "PK_replacement_transactions" PRIMARY KEY (id),
        CONSTRAINT "FK_replacement_transactions_transactions_transaction_id" FOREIGN KEY (transaction_id) REFERENCES transactions (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE vaults (
        id uuid NOT NULL,
        user_id uuid NOT NULL,
        asset_id uuid NOT NULL,
        minting_blob_id uuid NULL,
        vault_chain_id numeric NULL DEFAULT (nextval('"VaultChainId_ValidiumSequence"')),
        product_id uuid NULL,
        token_id text NULL,
        da_mode text NOT NULL,
        available_balance numeric NOT NULL,
        accounting_balance numeric NOT NULL,
        CONSTRAINT "PK_vaults" PRIMARY KEY (id),
        CONSTRAINT "FK_vaults_assets_asset_id" FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE,
        CONSTRAINT "FK_vaults_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE marketplace_orders (
        id uuid NOT NULL,
        marketplace_id uuid NOT NULL,
        user_id uuid NOT NULL,
        base_asset_vault_id uuid NOT NULL,
        quote_asset_vault_id uuid NOT NULL,
        type text NOT NULL,
        side text NOT NULL,
        status text NOT NULL,
        created_at timestamp without time zone NOT NULL DEFAULT (now()),
        raw_order_model jsonb NOT NULL,
        "UserId1" uuid NULL,
        CONSTRAINT "PK_marketplace_orders" PRIMARY KEY (id),
        CONSTRAINT "FK_marketplace_orders_marketplaces_marketplace_id" FOREIGN KEY (marketplace_id) REFERENCES marketplaces (id) ON DELETE RESTRICT,
        CONSTRAINT "FK_marketplace_orders_users_UserId1" FOREIGN KEY ("UserId1") REFERENCES users (id),
        CONSTRAINT "FK_marketplace_orders_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT,
        CONSTRAINT "FK_marketplace_orders_vaults_base_asset_vault_id" FOREIGN KEY (base_asset_vault_id) REFERENCES vaults (id) ON DELETE CASCADE,
        CONSTRAINT "FK_marketplace_orders_vaults_quote_asset_vault_id" FOREIGN KEY (quote_asset_vault_id) REFERENCES vaults (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE replacement_vault_updates (
        id uuid NOT NULL,
        vault_id uuid NOT NULL,
        replacement_tx_id uuid NOT NULL,
        amount numeric NOT NULL,
        CONSTRAINT "PK_replacement_vault_updates" PRIMARY KEY (id),
        CONSTRAINT "FK_replacement_vault_updates_replacement_transactions_replacem~" FOREIGN KEY (replacement_tx_id) REFERENCES replacement_transactions (id) ON DELETE CASCADE,
        CONSTRAINT "FK_replacement_vault_updates_vaults_vault_id" FOREIGN KEY (vault_id) REFERENCES vaults (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE vault_updates (
        id uuid NOT NULL,
        vault_id uuid NOT NULL,
        tx_id uuid NOT NULL,
        amount numeric NOT NULL,
        CONSTRAINT "PK_vault_updates" PRIMARY KEY (id),
        CONSTRAINT "FK_vault_updates_transactions_tx_id" FOREIGN KEY (tx_id) REFERENCES transactions (id) ON DELETE CASCADE,
        CONSTRAINT "FK_vault_updates_vaults_vault_id" FOREIGN KEY (vault_id) REFERENCES vaults (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE TABLE order_matches (
        id uuid NOT NULL,
        maker_order_id uuid NOT NULL,
        taker_order_id uuid NOT NULL,
        quantity numeric NOT NULL,
        price numeric NOT NULL,
        created_at timestamp without time zone NOT NULL DEFAULT (now()),
        transaction_id uuid NOT NULL,
        "MarketplaceOrderId" uuid NULL,
        CONSTRAINT "PK_order_matches" PRIMARY KEY (id),
        CONSTRAINT "FK_order_matches_marketplace_orders_MarketplaceOrderId" FOREIGN KEY ("MarketplaceOrderId") REFERENCES marketplace_orders (id),
        CONSTRAINT "FK_order_matches_transactions_transaction_id" FOREIGN KEY (transaction_id) REFERENCES transactions (id) ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_assets_starkex_type" ON assets (starkex_type);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_erc1155_minting_blobs_asset_id_minting_blob" ON erc1155_minting_blobs (asset_id, minting_blob);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_erc20_minting_blobs_asset_id_minting_blob" ON erc20_minting_blobs (asset_id, minting_blob);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_erc721_minting_blobs_asset_id_minting_blob" ON erc721_minting_blobs (asset_id, minting_blob);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_fees_config_action" ON fees_config (action);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_InboxState_Delivered" ON "InboxState" ("Delivered");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplace_orders_base_asset_vault_id" ON marketplace_orders (base_asset_vault_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplace_orders_marketplace_id" ON marketplace_orders (marketplace_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplace_orders_quote_asset_vault_id" ON marketplace_orders (quote_asset_vault_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplace_orders_user_id" ON marketplace_orders (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplace_orders_UserId1" ON marketplace_orders ("UserId1");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplaces_base_asset_id" ON marketplaces (base_asset_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_marketplaces_quote_asset_id" ON marketplaces (quote_asset_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_order_matches_MarketplaceOrderId" ON order_matches ("MarketplaceOrderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_order_matches_transaction_id" ON order_matches (transaction_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_OutboxMessage_EnqueueTime" ON "OutboxMessage" ("EnqueueTime");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_OutboxMessage_ExpirationTime" ON "OutboxMessage" ("ExpirationTime");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_OutboxMessage_InboxMessageId_InboxConsumerId_SequenceNumber" ON "OutboxMessage" ("InboxMessageId", "InboxConsumerId", "SequenceNumber");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_OutboxMessage_OutboxId_SequenceNumber" ON "OutboxMessage" ("OutboxId", "SequenceNumber");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_OutboxState_Created" ON "OutboxState" ("Created");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_replacement_transactions_transaction_id" ON replacement_transactions (transaction_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_replacement_vault_updates_replacement_tx_id" ON replacement_vault_updates (replacement_tx_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_replacement_vault_updates_vault_id" ON replacement_vault_updates (vault_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_transactions_starkex_tx_id" ON transactions (starkex_tx_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_users_stark_key" ON users (stark_key);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_vault_updates_tx_id" ON vault_updates (tx_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_vault_updates_vault_id" ON vault_updates (vault_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_vaults_asset_id" ON vaults (asset_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_vaults_minting_blob_id" ON vaults (minting_blob_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE INDEX "IX_vaults_user_id" ON vaults (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    CREATE UNIQUE INDEX "IX_vaults_vault_chain_id" ON vaults (vault_chain_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20231008113924_Initial') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20231008113924_Initial', '7.0.5');
    END IF;
END $EF$;
COMMIT;

